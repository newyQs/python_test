'''
一、python的内存管理机制及调优手段？
内存管理机制：引用计数；垃圾回收；内存池；
引用计数：
  引用计数一种高效的内存管理手段。
  当一个python对象被引用时其引用计数增加1,当其不再被一个变量引用时则计数减1，当引用计数等于0时对象被删除。

垃圾回收：
  1.引用计数：
    引用计数也是一种垃圾回收机制。
    当这个对象的引用计数降为0的时候，说明没有任何引用指向该对象，该对象就会成为要被回收的垃圾了。
    某个新建对象，他被分配给某个引用，对象的引用计数变为1.如果引用被删除，对象的引用计数为0，那么该对象就可以被垃圾回收。
    不过如果出现循环引用的话，引用计数机制就不会再起任何作用了。

  2.标记清除：
     如果两个对象的引用计数都为1，但是仅仅存在他们之间的循环引用，那么这两个对象都是需要被垃圾回收的。


二、内存泄漏是什么？如何避免？
 指的是由于疏忽或错误造成程序未能释放已经不再使用的内存的情况。
 内存泄漏指的是应用程序在分配某段内存后，由于设计错误，失去了对该段内存的控制，因而造成内存的浪费。
 导致程序运行速度减慢甚至系统奔溃等严重后果。

三、python函数调用的时候参数的传递方式是值传递还是引用传递？
  python的参数有：位置参数，默认参数，可变参数，关键字参数。

  不可变参数使用值传递：
      类似整数，字符串这些不可变对象，是通过拷贝进行传递的
  可变参数使用引用传递：
      类似列表，字典这些对象是通过引用传递的



'''
a = 10
b = 20
c = [a]
a = 15
print(c)
