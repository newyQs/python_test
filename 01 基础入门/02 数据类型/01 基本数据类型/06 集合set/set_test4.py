"""
交集，并集，补集，子集，超集

　　　　1.交集 - &
　　　　　　s1 = {1,2,3}
　　　　　　s2 = {2,3,4}
　　　　　　s3 = s1 & s2 # s3 = {2,3}
　　　　2.并集 - |
　　　　　　s1 = {1,2,3}
　　　　　　s2 = {2,3,4}
　　　　　　s3 = s1 | s2 #s3 = {1,2,3,4}
　　　　3.补集 - -
　　　　　　s1 = {1,2,3}
　　　　　　s2 = {2,3,4}
　　　　　　s3 = s1 - s2 #生成属于s1 但 不属于s2的所有的元素
　　　　　　#s3 = {1}
　　　　4.对称补集 - ^
　　　　　　s1 = {1,2,3}
　　　　　　s2 = {2,3,4}
　　　　　　s3 = s1 ^ s2 # (s1 - s2) | (s2 - s1)
　　　　5.超集 - >
　　　　6.子集 - <
　　　　　　s1 = {1,2,3}
　　　　　　s2 = {2,3}

　　　　　　s1 > s2 # True s1 是 s2 的超集
　　　　　　s1 < s2 # False s1 不是 s2 的子集

集合的运算
交集&、并集|、补集（差集）-、对称补集^、子集<、超集（父集）>

交集 &
并集 |
补集（差集） -
对称补集 ^
子集 <
超集（父集） >

1、intersection：求交集
s1={1,2,3,4}
s2={7,2,4,9,10}
s1.intersection(s2)
结果：{2, 4}

2、union：求并集
s1={1,2,3,4}
s2={7,2,4,9,10}
s1.union(s2)
结果：

{1, 2, 3, 4, 7, 9, 10}

3、difference：求差集
s1={1,2,3,4}
s2={7,2,4,9,10}
s1.difference(s2)
结果：
{1, 3}
s2.difference(s1)
结果：
{9, 10, 7}
4、symmetric_difference：交叉并集
交叉并集可以看做并集减去交集

s1={1,2,3,4}
s2={7,2,4,9,10}
s1.symmetric_difference(s2)
结果：

{1, 3, 7, 9, 10}
"""
