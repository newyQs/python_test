"""

"""
import numpy as np

# 1. 整数数组索引
# 创建二维数组
x = np.array([[1, 2], [3, 4], [5, 6]])
# [0,1,2]代表行索引;[0,1,0]代表列索引
y = x[[0, 1, 2], [0, 1, 0]]
print(y)
# 将行、列索引组合会得到 (0,0)、(1,1) 和 (2,0) ，它们分别对应着输出结果在原数组中的索引位置

b = np.array(
    [[0, 1, 2],
     [3, 4, 5],
     [6, 7, 8],
     [9, 10, 11]]
)
r = np.array([[0, 0], [3, 3]])
c = np.array([[0, 2], [0, 2]])
# 获取四个角的元素
print(b[r, c])

d = np.array(
    [[0, 1, 2],
     [3, 4, 5],
     [6, 7, 8],
     [9, 10, 11]]
)
# 对行列分别进行切片
e = d[1:4, 1:3]
print(e)
# 行使用基础索引，对列使用高级索引
f = d[1:4, [1, 2]]
# 显示切片后结果
print(f)
# 对行使用省略号
h = d[..., 1:]
print(h)

# 2. 布尔数组索引
# 返回所有大于6的数字组成的数组
x = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]])
print(x[x > 6])
# 使用补码运算符来去除 NaN（即非数字元素）
a = np.array([np.nan, 1, 2, np.nan, 3, 4, 5])
print(a[~np.isnan(a)])
# 删除数组中整数元素
a = np.array([1, 2 + 6j, 5, 3.5 + 5j])
print(a[np.iscomplex(a)])

# 3. 花式索引
# 当原数组是一维数组时，使用一维整型数组作为索引，那么索引结果就是相应索引位置上的元素
x = np.array([1, 2, 3, 4])
print(x[0])
# 如果原数组是二维数组，那么索引数组也需要是二维的，索引数组的元素值与被索引数组的每一行相对应
x = np.arange(32).reshape((8, 4))
# 分别对应 第4行数据、第2行数据、第1行数据、第7行数据项
print(x[[4, 2, 1, 7]])
# 也可以使用倒序索引数组
x = np.arange(32).reshape((8, 4))
print(x[[-4, -2, -1, -7]])
# 还可以同时使用多个索引数组，但这种情况下需要添加np.ix_
x = np.arange(32).reshape((8, 4))
print(x[np.ix_([1, 5, 7, 2], [0, 3, 1, 2])])
